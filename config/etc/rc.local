#!/bin/sh
#
# $OpenBSD: rc.local,v 1.3 2014/07/14 10:15:33 ajacoutot Exp $
#
# Site-specific startup actions, daemons, and other things which
# can be done AFTER your system goes into securemode.  For actions
# which should be done BEFORE your system has gone into securemode
# please see /etc/rc.securelevel.
#

START_TIME=$(date "+%s")

# Make sure we always have a /var directory structure we can work on
sh /etc/make.var

touch /var/log/utmfw/.starting

echo '\nStarting UTMFW services...'

# Start PHP FastCGI server
if [ -x /usr/local/sbin/php-fpm-8.4 ]; then
	echo 'PHP FastCGI server'
	/usr/local/sbin/php-fpm-8.4
fi

if [ -x /usr/local/sbin/dnsmasq ]; then
	echo 'DNS forwarder'
	/usr/local/sbin/dnsmasq
fi

echo -n 'Monitoring:'
# Order of symux and symon process start-up is important.
if [ -x /usr/local/libexec/symux ]; then
	echo -n ' system'
	/usr/local/libexec/symux

	if [ -x /usr/local/libexec/symon ]; then
		echo -n '' # Prevent empty if block in case below line commented out
		/usr/local/libexec/symon
	fi
fi

if [ -x /usr/local/sbin/pmacctd ]; then
	echo -n ', network'
	/usr/local/sbin/pmacctd -f /etc/pmacct/pmacctd-pnrg.conf >/dev/null 2>&1
	/usr/local/sbin/pmacctd -f /etc/pmacct/pmacctd-protograph.conf >/dev/null 2>&1
fi

if [ -x /usr/local/sbin/collectd ]; then
	echo -n ', statistics'
	/usr/local/sbin/collectd >/dev/null 2>&1
fi

echo -n '\nAnti-virus/spam:'
# Start ClamAV and freshclam daemons
[[ ! -d /var/log/utmfw/run/clamav ]] && mkdir /var/log/utmfw/run/clamav
chown _clamav:_clamav /var/log/utmfw/run/clamav
if [ -x /usr/local/sbin/clamd ]; then
	echo -n ' virus'
	/usr/local/sbin/clamd -c /etc/clamd.conf >/dev/null 2>&1

	if [ -x /usr/local/bin/freshclam ]; then
		echo -n ', virus db'
		/usr/local/bin/freshclam -d >/dev/null 2>&1
	fi
fi

# Start SpamAssassin
if [ -x /usr/local/bin/spamd ]; then
	echo -n ', spam'
	/usr/local/bin/spamd -L -d -x -u _spamdaemon -r /var/log/utmfw/run/spamassassin.pid
fi

echo -n '\nIntrusion detection and prevention:'
# Start Snort IDS for WAN and LAN, and Snort IPS inline
if [ -x /usr/local/bin/snort ]; then
	[[ ! -d /var/log/utmfw/run/snort ]] && mkdir /var/log/utmfw/run/snort
	chown _snort /var/log/utmfw/run/snort
	echo -n ' ids'
	/usr/local/bin/snort -i lan0 -D -d -c /etc/snort/snort.conf -u _snort -g _snort -b -l /var/log/snort --pid-path /var/log/utmfw/run/snort >/dev/null 2>&1
#	/usr/local/bin/snort -i wan0 -D -d -c /etc/snort/snort.conf -u _snort -g _snort -b -l /var/log/snort --pid-path /var/log/utmfw/run/snort >/dev/null 2>&1
	echo -n ', inline ips'
	/usr/local/bin/snort -D -d -Q -c /etc/snort/snortinline.conf -u _snort -g _snort -b -l /var/log/snort --pid-path /var/log/utmfw/run/snort >/dev/null 2>&1
fi

# Start SnortIPS
if [ -x /usr/local/sbin/snortips ]; then
	echo -n ', passive ips'
	/usr/local/sbin/snortips
fi

echo -n '\nProxies:'
# Start p3scan: pop3 virus and spam filter
if [ -x /usr/local/sbin/p3scan ]; then
	echo -n ' pop3'
	[[ ! -d /var/log/utmfw/run/p3scan ]] && mkdir /var/log/utmfw/run/p3scan
	chown _p3scan /var/log/utmfw/run/p3scan
	/usr/local/sbin/p3scan -f /etc/p3scan/p3scan.conf
fi

# Start smtp-gated: smtp virus and spam filter
if [ -x /usr/local/sbin/smtp-gated ]; then
	[[ ! -d /var/log/utmfw/run/smtp-gated ]] && mkdir /var/log/utmfw/run/smtp-gated
	chown _smtp-gated /var/log/utmfw/run/smtp-gated
	echo -n ', smtp'
	/usr/local/sbin/smtp-gated /etc/smtp-gated.conf
fi

# Starting IM proxy
if [ -x /usr/local/sbin/imspector ]; then
	[[ ! -d /tmp/imspector ]] && mkdir /tmp/imspector
	chown -R _imspector:_imspector /tmp/imspector
	echo -n ', im'
	/usr/local/sbin/imspector -c /etc/imspector/imspector.conf
fi

# Start SOCKS proxy
if [ -x /usr/local/sbin/sockd ]; then
	echo -n ', socks'
	/usr/local/sbin/sockd -D -p /var/log/utmfw/run/sockd.pid >/dev/null 2>&1
fi

# Start E2Guardian content filter
if [ -x /usr/local/sbin/e2guardian ]; then
	[[ ! -d /var/log/utmfw/tmp/e2guardian ]] && mkdir /var/log/utmfw/tmp/e2guardian
	chown -R _e2guardian:_clamav /var/log/utmfw/tmp/e2guardian
	echo -n '\nWeb filter'
	/usr/local/sbin/e2guardian >/dev/null 2>&1
fi

# Start SSLproxy
if [ -x /usr/local/bin/sslproxy ]; then
	echo -n '\nSSL proxy'
	/usr/local/bin/sslproxy -f /etc/sslproxy/sslproxy.conf >/dev/null 2>&1
fi

echo
banner utmfw

echo -n "a~a." > /dev/speaker &

END_TIME=$(date "+%s")

echo "is ready... (in $(($END_TIME - $START_TIME)) seconds)\n"

rm /var/log/utmfw/.starting
